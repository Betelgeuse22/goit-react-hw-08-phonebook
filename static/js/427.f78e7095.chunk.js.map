{"version":3,"file":"static/js/427.f78e7095.chunk.js","mappings":"8QAEaA,EAAYC,EAAAA,GAAAA,KAAH,sBAETC,EAAQD,EAAAA,GAAAA,MAAH,2MAYLE,EAAQF,EAAAA,GAAAA,MAAH,+GAOLG,EAASH,EAAAA,GAAAA,OAAH,qP,sECrBNI,E,QAAMJ,GAAAA,IAAH,yK,yKCAHK,EAAOL,EAAAA,GAAAA,KAAH,yCAIJE,EAAQF,EAAAA,GAAAA,MAAH,2MAWLM,EAAgBN,EAAAA,GAAAA,MAAH,8MAWbO,EAAeP,EAAAA,GAAAA,KAAH,sI,mBCfZQ,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,WAAS,SAAC,MAAD,KAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,YAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KACA,GAAgCR,EAAAA,EAAAA,UAAS,IAAzC,eAAOS,EAAP,KAAiBC,EAAjB,KACA,GAA8CV,EAAAA,EAAAA,UAAS,IAAvD,eAAOW,EAAP,KAAwBC,EAAxB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,MAAa,SAATX,EACKC,EAAQU,GAEJ,UAATX,EACKG,EAASQ,GAEL,aAATX,EACKK,EAAYM,GAER,oBAATX,EACKO,EAAmBI,QAD5B,CAID,EAwCD,OACE,UAACtB,EAAD,CAAMuB,SA7Ba,SAAAH,GACnBA,EAAEI,iBAEU,KAAVX,GACa,KAAbE,GACS,KAATJ,GACoB,KAApBM,EAKEF,EAASU,OAAS,GACpBC,EAAAA,EAAAA,IAAM,4CAGJX,IAAaE,EAIjBb,GACEuB,EAAAA,EAAAA,IAAS,CACPhB,KAAAA,EACAE,MAAAA,EACAE,SAAAA,MAPFW,EAAAA,EAAAA,IAAM,mCARNA,EAAAA,EAAAA,IAAM,6BAkBT,EAG+BE,aAAa,MAA3C,WACE,UAAC/B,EAAD,uBAEE,SAACI,EAAD,CACEQ,KAAK,OACLE,KAAK,OACLW,MAAOX,EACPkB,SAAUV,QAGd,UAACtB,EAAD,oBAEE,SAACI,EAAD,CACEQ,KAAK,QACLE,KAAK,QACLW,MAAOT,EACPgB,SAAUV,QAGd,UAACtB,EAAD,uBAEE,SAACI,EAAD,CACEQ,KAAMA,EACNE,KAAK,WACLW,MAAOP,EACPc,SAAUV,KAEZ,SAACjB,EAAD,CAAc4B,QAlEI,WACT,aAATrB,GACFC,EAAQ,QACRF,GAAc,SAAC,MAAD,OAEdE,EAAQ,YACRF,GAAc,SAAC,MAAD,KAEjB,EA0DK,SAAyCD,QAE3C,UAACV,EAAD,+BAEE,SAACI,EAAD,CACEQ,KAAMA,EACNE,KAAK,kBACLW,MAAOL,EACPY,SAAUV,QAGd,SAAC,KAAD,CAAQV,KAAK,SAAb,wBAGL,E,UCnHc,SAASsB,IACtB,OACE,UAAChC,EAAA,EAAD,YACE,SAACiC,EAAA,EAAD,WACE,+CAEF,SAAC7B,EAAD,MAGL,C","sources":["components/Form/Form.styled.jsx","components/common/Box.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyle = styled.form``;\n\nexport const Input = styled.input`\n  margin: 20px 0;\n  padding: 20px;\n\n  width: 100%;\n  height: 40px;\n  border-radius: 20px;\n  border-style: 2px solid green;\n\n  background-color: rgba(206, 186, 186, 0.4);\n`;\n\nexport const Label = styled.label`\n  font-style: italic;\n  font-size: 16px;\n  text-decoration: dotted;\n  color: grey;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n  height: 30px;\n  width: 150px;\n  font-size: 16px;\n  color: black;\n\n  background-color: rgba(191, 204, 191, 0.6);\n  border-radius: 20px;\n  border-style: 2px solid green;\n\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: calc(100vh - 50px);\n  background-color: rgb(226, 238, 241);\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 320px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  font-style: italic;\n  font-size: 16px;\n  text-decoration: dotted;\n  color: grey;\n`;\n\nexport const InputRegister = styled.input`\n  padding-left: 10px;\n  margin: 20px 0;\n  width: 100%;\n  height: 40px;\n  border-radius: 20px;\n  border-style: 2px solid green;\n\n  background-color: rgba(206, 186, 186, 0.4);\n`;\n\nexport const IconPassword = styled.span`\n  position: absolute;\n  top: 5px;\n  right: 10px;\n  cursor: pointer;\n  user-select: none;\n  z-index: 99;\n`;\n","import { toast } from 'react-hot-toast';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AiOutlineEye, AiOutlineEyeInvisible } from 'react-icons/ai';\nimport { register } from 'redux/auth/operations';\nimport {\n  Form,\n  IconPassword,\n  Label,\n  InputRegister,\n} from './RegisterForm.styled';\nimport { Button } from 'components/Form/Form.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [toggleIcon, setToggleIcon] = useState(<AiOutlineEyeInvisible />);\n  const [type, setType] = useState('password');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      return setName(value);\n    }\n    if (name === 'email') {\n      return setEmail(value);\n    }\n    if (name === 'password') {\n      return setPassword(value);\n    }\n    if (name === 'confirmPassword') {\n      return setConfirmPassword(value);\n    }\n    return;\n  };\n\n  const togglePassInput = () => {\n    if (type === 'password') {\n      setType('text');\n      setToggleIcon(<AiOutlineEye />);\n    } else {\n      setType('password');\n      setToggleIcon(<AiOutlineEyeInvisible />);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      email === '' ||\n      password === '' ||\n      name === '' ||\n      confirmPassword === ''\n    ) {\n      toast('Please, fill in all fields');\n      return;\n    }\n    if (password.length < 7) {\n      toast('Password must be at least 7 symbols long');\n      return;\n    }\n    if (password !== confirmPassword) {\n      toast('Wrong confirmation of password');\n      return;\n    }\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    );\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Username\n        <InputRegister\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Email\n        <InputRegister\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Password\n        <InputRegister\n          type={type}\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n        <IconPassword onClick={togglePassInput}>{toggleIcon}</IconPassword>\n      </Label>\n      <Label>\n        Confirm password\n        <InputRegister\n          type={type}\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">Register</Button>\n    </Form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Box } from 'components/common/Box';\n\nexport default function Register() {\n  return (\n    <Box>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </Box>\n  );\n}\n"],"names":["FormStyle","styled","Input","Label","Button","Box","Form","InputRegister","IconPassword","RegisterForm","dispatch","useDispatch","useState","toggleIcon","setToggleIcon","type","setType","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleChange","e","target","value","onSubmit","preventDefault","length","toast","register","autoComplete","onChange","onClick","Register","Helmet"],"sourceRoot":""}